{"version":3,"file":"util.min.js","sources":["../src/util.js"],"sourcesContent":["/* eslint-disable */\n// Helper function to convert bytes to megabytes\nexport const sizeInMb = sizeInBytes => (sizeInBytes / (1024 * 1024)).toFixed(2);\n\n/**\n * Download table element as a csv.\n * @param {string} table_id\n * @param {string} separator\n */\nexport function download_table_as_csv(table_id, separator = ',') {\n  // Select rows from table_id\n  var rows = document.querySelectorAll('table#' + table_id + ' tr');\n  // Construct csv\n  var csv = [];\n  for (var i = 0; i < rows.length; i++) {\n    var row = [], cols = rows[i].querySelectorAll('td, th');\n    for (var j = 0; j < cols.length; j++) {\n      // Clean innertext to remove multiple spaces and jumpline (break csv)\n      var data = cols[j].innerText.replace(/(\\r\\n|\\n|\\r)/gm, '').replace(/(\\s\\s)/gm, ' ');\n\n      // Escape double-quote with double-double-quote\n      // (see https://stackoverflow.com/questions/17808511/properly-escape-a-double-quote-in-csv)\n      data = data.replace(/\"/g, '\"\"');\n\n      // If no data is returned, it usually means that there is a font-awesome icon in the table.\n      if (data.length === 0) {\n\n        if (cols[j].firstChild?.classList?.contains('text-success')) {\n          data = \"1\"\n        } else if (cols[j].firstChild?.classList?.contains('text-danger')) {\n          data = \"0\"\n        } else if (cols[j].firstChild?.classList?.contains('text-warning')) {\n          data = \"?\"\n        }\n\n      }\n\n      // Push escaped string\n      row.push('\"' + data + '\"');\n    }\n    csv.push(row.join(separator));\n  }\n  var csv_string = csv.join('\\n');\n  // Download it\n  var filename = 'export_' + table_id + '_' + new Date().toLocaleDateString() + '.csv';\n  var link = document.createElement('a');\n  link.style.display = 'none';\n  link.setAttribute('target', '_blank');\n  link.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv_string));\n  link.setAttribute('download', filename);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\n// Helper function to render fontawesome success icon\nexport const renderSuccessIcon = () => '<i class=\"fa-solid fa-check text-success\"></i>';\n\n// Helper function render fontawesome warning icon\nexport const renderWarningIcon = () => '<i class=\"fa-solid fa-warning text-warning\"></i>';\n\n// Helper function to render fontawesome failure icon\nexport const renderFailIcon = () => '<i class=\"fa-solid fa-xmark text-danger\"></i>';"],"names":["table_id","separator","rows","document","querySelectorAll","csv","i","length","row","cols","j","data","innerText","replace","firstChild","_cols$j$firstChild","classList","_cols$j$firstChild$cl","contains","_cols$j$firstChild2","_cols$j$firstChild2$c","_cols$j$firstChild3","_cols$j$firstChild3$c","push","join","csv_string","filename","Date","toLocaleDateString","link","createElement","style","display","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","sizeInBytes","toFixed"],"mappings":"2KASsCA,cAAUC,iEAAY,YAEtDC,KAAOC,SAASC,iBAAiB,SAAWJ,SAAW,OAEvDK,IAAM,GACDC,EAAI,EAAGA,EAAIJ,KAAKK,OAAQD,IAAK,SAChCE,IAAM,GAAIC,KAAOP,KAAKI,GAAGF,iBAAiB,UACrCM,EAAI,EAAGA,EAAID,KAAKF,OAAQG,IAAK,kIAEhCC,KAAOF,KAAKC,GAAGE,UAAUC,QAAQ,iBAAkB,IAAIA,QAAQ,WAAY,QAO3D,KAHpBF,KAAOA,KAAKE,QAAQ,KAAM,OAGjBN,kCAEHE,KAAKC,GAAGI,wEAARC,mBAAoBC,4CAApBC,sBAA+BC,SAAS,gBAC1CP,KAAO,gCACEF,KAAKC,GAAGI,yEAARK,oBAAoBH,4CAApBI,sBAA+BF,SAAS,eACjDP,KAAO,gCACEF,KAAKC,GAAGI,yEAARO,oBAAoBL,4CAApBM,sBAA+BJ,SAAS,kBACjDP,KAAO,KAMXH,IAAIe,KAAK,IAAMZ,KAAO,KAExBN,IAAIkB,KAAKf,IAAIgB,KAAKvB,gBAEhBwB,WAAapB,IAAImB,KAAK,MAEtBE,SAAW,UAAY1B,SAAW,KAAM,IAAI2B,MAAOC,qBAAuB,OAC1EC,KAAO1B,SAAS2B,cAAc,KAClCD,KAAKE,MAAMC,QAAU,OACrBH,KAAKI,aAAa,SAAU,UAC5BJ,KAAKI,aAAa,OAAQ,+BAAiCC,mBAAmBT,aAC9EI,KAAKI,aAAa,WAAYP,UAC9BvB,SAASgC,KAAKC,YAAYP,MAC1BA,KAAKQ,QACLlC,SAASgC,KAAKG,YAAYT,gIAlDJU,cAAgBA,qBAA6BC,QAAQ,8BAsD5C,IAAM,4EAGN,IAAM,2EAGT,IAAM"}