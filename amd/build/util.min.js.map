{"version":3,"file":"util.min.js","sources":["../src/util.js"],"sourcesContent":["// Helper function to convert bytes to megabytes\nexport const sizeInMb = sizeInBytes => (sizeInBytes / (1024 * 1024)).toFixed(2);\n\n// Helper function to convert an HTML table into a CSV\nexport const downloadAsCSV = (tableEle, separator = ',') => {\n    let csvRows = [];\n    // Only get direct children of the table in question (thead, tbody)\n    Array.from(tableEle.children).forEach(function(node) {\n        // Using scope to only get direct tr of node\n        node.querySelectorAll(':scope > tr').forEach(function(tr) {\n            let csvLine = [];\n            // Again scope to only get direct children\n            tr.querySelectorAll(':scope > td').forEach(function(td) {\n                // Clone as to not remove anything from original\n                let copytd = td.cloneNode(true);\n                let data;\n                if (copytd.dataset.val) {\n                    data = copytd.dataset.val.replace(/(\\r\\n|\\n|\\r)/gm, '');\n                } else {\n                    Array.from(copytd.children).forEach(function(remove) {\n                        // Remove nested elements before getting text\n                        remove.parentNode.removeChild(remove);\n                    });\n                    data = copytd.textContent.replace(/(\\r\\n|\\n|\\r)/gm, '');\n                }\n                data = data.replace(/(\\s\\s)/gm, ' ').replace(/\"/g, '\"\"');\n                csvLine.push('\"' + data + '\"');\n            });\n            csvRows.push(csvLine.join(separator));\n        });\n    });\n    let a = document.createElement(\"a\");\n    a.style = \"display: none; visibility: hidden\"; // Safari needs visibility hidden\n    a.href = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csvRows.join('\\n'));\n    a.download = 'testfile.csv';\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n};\n\n// Helper function to render fontawesome success icon\nexport const renderSuccessIcon = () => '<i class=\"fa-solid fa-check text-success\"></i>';\n\n// Helper function render fontawesome warning icon\nexport const renderWarningIcon = () => '<i class=\"fa-solid fa-warning text-warning\"></i>';\n\n// Helper function to render fontawesome failure icon\nexport const renderFailIcon = () => '<i class=\"fa-solid fa-xmark text-danger\"></i>';"],"names":["sizeInBytes","toFixed","tableEle","separator","csvRows","Array","from","children","forEach","node","querySelectorAll","tr","csvLine","td","data","copytd","cloneNode","dataset","val","replace","remove","parentNode","removeChild","textContent","push","join","a","document","createElement","style","href","encodeURIComponent","download","body","appendChild","click"],"mappings":"uQACwBA,cAAgBA,qBAA6BC,QAAQ,0BAGhD,SAACC,cAAUC,iEAAY,IAC5CC,QAAU,GAEdC,MAAMC,KAAKJ,SAASK,UAAUC,SAAQ,SAASC,MAE3CA,KAAKC,iBAAiB,eAAeF,SAAQ,SAASG,QAC9CC,QAAU,GAEdD,GAAGD,iBAAiB,eAAeF,SAAQ,SAASK,QAG5CC,KADAC,OAASF,GAAGG,WAAU,GAEtBD,OAAOE,QAAQC,IACfJ,KAAOC,OAAOE,QAAQC,IAAIC,QAAQ,iBAAkB,KAEpDd,MAAMC,KAAKS,OAAOR,UAAUC,SAAQ,SAASY,QAEzCA,OAAOC,WAAWC,YAAYF,WAElCN,KAAOC,OAAOQ,YAAYJ,QAAQ,iBAAkB,KAExDL,KAAOA,KAAKK,QAAQ,WAAY,KAAKA,QAAQ,KAAM,MACnDP,QAAQY,KAAK,IAAMV,KAAO,QAE9BV,QAAQoB,KAAKZ,QAAQa,KAAKtB,sBAG9BuB,EAAIC,SAASC,cAAc,KAC/BF,EAAEG,MAAQ,oCACVH,EAAEI,KAAO,+BAAiCC,mBAAmB3B,QAAQqB,KAAK,OAC1EC,EAAEM,SAAW,eACbL,SAASM,KAAKC,YAAYR,GAC1BA,EAAES,QACFT,EAAEN,qCAI2B,IAAM,4EAGN,IAAM,2EAGT,IAAM"}