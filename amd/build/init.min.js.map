{"version":3,"file":"init.min.js","sources":["../src/init.js"],"sourcesContent":["/* eslint-disable */\nimport $ from 'jquery';\nimport {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\nimport ChartJS from 'core/chartjs';\nimport ModalFactory from 'core/modal_factory';\nimport {downloadAsCSV, renderFailIcon, renderSuccessIcon} from './util'\n\n/**\n * This function acts as the main entry point and renderer for the plugin. It will attach to DOM elements created in\n * the templates/**.mustache, and populate them with data.\n *\n * @param {object} data Information about the scan queue and scan results\n * @param {object} data.totals\n * @param {number} data.totals.scanned How many document have been scanned\n * @param {number} data.totals.inqueue How many documents are waiting to be scanned\n * @param {number} data.totals.notinqueue How many documents are not yet in the queue\n * @param {object} data.pdfs\n * @param {object[]} data.pdfs.pass An array of PDFs that meet 100% of a11y checks performed by scanner\n * @param {object[]} data.pdfs.warn An array of PDFs that meet between 100% and 0% of a11y checks performed by scanner\n * @param {object[]} data.pdfs.fail An array of PDFs that meet 0% of a11y checks performed by scanner\n **/\nexport const init = (data) => {\n\n  console.log({data})\n\n  /**\n   * Create stats breakdown in pie graph and attach to the DOM.\n   * Pie slices are pas, warn, and fail.\n   */\n  function renderPieChart() {\n\n    // Create the canvas element.\n    const canvas = $('<canvas/>')\n      .attr({\n        id: '#block-a11y-check-pie-chart-canvas',\n        'aria-label': 'A11y check pie chart describing the a11y status of the course PDFs.'\n      })\n\n    const ctx = canvas[0].getContext('2d')\n\n    // Append the canvas to the DOM.\n    $('#block-a11y-check-pie-chart-root')\n      .append(\n        $('<h6/>')\n          .addClass('mb-2')\n          .text('PDF Accessibility')\n      )\n      .append(canvas)\n\n    const chartData = {\n      labels: [`Pass (${data.pdfs.pass.length})`, `Warn (${data.pdfs.warn.length})`, `Fail (${data.pdfs.fail.length})`],\n      datasets: [{\n        label: 'A11y Check',\n        data: [\n          data.pdfs.pass.length,\n          data.pdfs.warn.length,\n          data.pdfs.fail.length\n        ],\n        backgroundColor: [\n          // Green.\n          '#5cb85c',\n          // Yellow.\n          '#f0ad4e',\n          // Red.\n          '#d9534f'\n        ]\n      }]\n    }\n    new ChartJS(ctx, {\n      type: 'pie',\n      data: chartData\n    })\n  }\n\n  function createNoDataParagraph() {\n    return $('<p/>')\n      .text(\"No data to show\")\n  }\n\n  /**\n   * Creates details table showing breakdown of stats returned by the scanner.\n   * @returns {*|jQuery|void}\n   */\n  function createDetailsTable() {\n    // Create the table content.\n    const $table = $('<table/>')\n      .addClass('table table-bordered table-hover table-responsive table-sm')\n      .append(\n        $('<thead/>')\n          .append(\n            $('<tr/>')\n              .append(\n                $('<th/>')\n                  .attr('scope', 'col')\n                  .text('Filename')\n              )\n              .append(\n                $('<th/>')\n                  .attr('scope', 'col')\n                  .text('Bookmarks')\n              )\n              .append(\n                $('<th/>')\n                  .attr('scope', 'col')\n                  .text('Lang')\n              )\n              .append(\n                $('<th/>')\n                  .attr('scope', 'col')\n                  .text('Text')\n              )\n              .append(\n                $('<th/>')\n                  .attr('scope', 'col')\n                  .text('Title')\n              )\n              .append(\n                $('<th/>')\n                  .attr('scope', 'col')\n                  .text('Tagged')\n              )\n              .append(\n                $('<th/>')\n                  .attr('scope', 'col')\n                  .text('Pages')\n              )\n          )\n      )\n    // Create the table body.\n    const $tableBody = $('<tbody/>')\n\n    // Concatenate an array with all pdfs in data arg.\n    const pdfs = [].concat(\n      data.pdfs.pass,\n      data.pdfs.warn,\n      data.pdfs.fail\n    )\n\n    // Generate the table rows\n    const $tableRows = pdfs.map(\n      pdf => $('<tr/>')\n        .append(\n          $('<td/>')\n            .addClass('text-truncate')\n            .text(pdf.filename)\n        )\n        .append(\n          $('<td/>')\n            .append(pdf.hasbookmarks === \"1\"\n              ? $(renderSuccessIcon())\n              : $(renderFailIcon()))\n        )\n        .append(\n          $('<td/>')\n            .append(pdf.haslanguage === \"1\"\n              ? $(renderSuccessIcon())\n              : $(renderFailIcon()))\n        )\n        .append(\n          $('<td/>')\n            .append(pdf.hastext === \"1\"\n              ? $(renderSuccessIcon())\n              : $(renderFailIcon()))\n        )\n        .append(\n          $('<td/>')\n            .append(pdf.hastitle === \"1\"\n              ? $(renderSuccessIcon())\n              : $(renderFailIcon()))\n        )\n        .append(\n          $('<td/>')\n            .append(pdf.istagged === \"1\"\n              ? $(renderSuccessIcon())\n              : $(renderFailIcon()))\n        )\n        .append(\n          $('<td/>')\n            .append(pdf.pagecount >= 1\n              ? $('<span/>').text(pdf.pagecount)\n              : $(renderFailIcon()))\n        )\n    )\n\n    // Append the table rows to the table.\n    $tableBody.append($tableRows)\n    $table.append($tableBody)\n\n    return $table\n  }\n\n  /**\n   * Creates a download button that when clicked, downloads a CSV version of the table.\n   * @param $table\n   * @returns {*|jQuery|void}\n   */\n  function createDownloadButton($table) {\n    // Create the download to csv button.\n    return $('<button/>')\n      .addClass('btn btn-secondary mb-2')\n      .text('Download to CSV')\n      .click(() => downloadAsCSV($table.get()))\n  }\n\n  /**\n   * Create the button element that when clicked, opens the modal.\n   * @param modal\n   * @returns {*|void}\n   */\n  function createModalTriggerButton(modal) {\n    // Create the button triggering the modal.\n    return $('<button/>')\n      .addClass('btn btn-secondary')\n      .text('Details')\n      .click(() => modal.show())\n  }\n\n  /**\n   * Creates a modal window that displays a table of each PDF scanned by the plugin in the current course.\n   * @returns {Promise<*>}\n   */\n  async function createModal() {\n\n    const $table = createDetailsTable()\n\n    // Create the modal body first, so we can attach it during the modal's instantiation.\n    const $modalBody = $('<div/>')\n      .append(createDownloadButton($table))\n      .append($table)\n\n    // Create the modal.\n    const modal = await ModalFactory.create({\n      title: 'A11y Check Details',\n      body: $modalBody,\n      // TODO: Add last updated timestamp\n      footer: '<p>Last updated mm dd at ##:##:##</p>',\n      large: true\n    })\n\n    // This allows the modal to have 95% of screen width.\n    modal.getRoot()[0].childNodes[1].style.maxWidth = '95vw' || undefined\n\n    return modal\n  }\n\n  // Create the context. This gets passed to the template.\n  const context = {\n    name: 'A11y Check'\n  };\n\n  // This will call the function to load and render our template.\n  Templates.renderForPromise('block_a11y_check/summary', context)\n    .then(({html, js}) => {\n\n      // Render the template.\n      Templates.appendNodeContents(\"#block-a11y-check-root\", html, js);\n\n      // Create the modal.\n      createModal()\n        .then(modal => {\n\n          // Append the button trigger to the DOM.\n          $(\"#block-a11y-check-more-details-root\").append(\n            createModalTriggerButton(modal)\n          )\n\n          // Render the queue stats.\n          if (data.pdfs.pass.length > 0 || data.pdfs.warn.length > 0 || data.pdfs.fail.length > 0) {\n            renderPieChart()\n          } else {\n            $('#block-a11y-check-root').append(\n              createNoDataParagraph()\n            )\n          }\n\n          // TODO: Render the queue stats.\n\n        }).catch((error) => displayException(error));\n\n    })\n    // Deal with this exception (Using core/notify exception function is recommended).\n    .catch((error) => displayException(error));\n};\n"],"names":["data","createModal","$table","addClass","append","attr","text","$tableBody","$tableRows","concat","pdfs","pass","warn","fail","map","pdf","filename","hasbookmarks","haslanguage","hastext","hastitle","istagged","pagecount","createDetailsTable","$modalBody","click","get","createDownloadButton","modal","ModalFactory","create","title","body","footer","large","getRoot","childNodes","style","maxWidth","console","log","renderForPromise","name","then","_ref","html","js","appendNodeContents","show","createModalTriggerButton","length","canvas","id","ctx","getContext","chartData","labels","datasets","label","backgroundColor","ChartJS","type","renderPieChart","catch","error"],"mappings":"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"}